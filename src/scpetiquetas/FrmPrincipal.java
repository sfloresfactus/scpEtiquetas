package scpetiquetas;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.JOptionPane;

public class FrmPrincipal extends javax.swing.JFrame {

    public FrmPrincipal() throws FileNotFoundException, IOException {

        initComponents();

        Font fuente40 = new Font("Arial", 0, 40);
        Font fuente30 = new Font("Arial", 0, 30);

        Color colorLabelLetra = Color.decode("#268CAD");

        lblTitulo.setForeground(colorLabelLetra);
        lblTitulo.setFont(fuente40);

        lblInstruccion.setForeground(colorLabelLetra);
        lblInstruccion.setFont(fuente30);

        Color botonColorLetra = Color.decode("#FFFFFF");

        Color botonColorFondo = Color.decode("#6DB022");
        btnSiguiente.setForeground(botonColorLetra);
        btnSiguiente.setBackground(botonColorFondo);

        btnSiguiente.setVisible(true);
        // texto por default
        Texto.setText("");

        // busca si existe archivo de texto, y lee linea
        //File archivoNombre = new File("etiqueta.ini");
        File archivoNombre = new File("scpetiquetas.ini");
        if (archivoNombre.exists()) {
            // archivo existe
            lblImpresora.setText("Existe");
            // leer linea
            FileReader fr;
            fr = new FileReader("scpetiquetas.ini");
            BufferedReader bf = new BufferedReader(fr);

            // lee archivo
            String linea;
            while ((linea = bf.readLine()) != null) {
                lblImpresora.setText(linea);
            }
        } else {
            // no existe archivo
            //lblImpresora.setText("no existe");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Texto = new javax.swing.JTextField();
        btnSiguiente = new javax.swing.JButton();
        lblInstruccion = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblImpresora = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Texto.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        Texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoActionPerformed(evt);
            }
        });

        btnSiguiente.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(0, 51, 51));
        btnSiguiente.setText("Imprimir");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        lblInstruccion.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblInstruccion.setText("Nº ITO Producción Pintura");

        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitulo.setText("Impresión de Etiquetas");

        jButton1.setText("Impresora");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblImpresora.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSiguiente)
                    .addComponent(Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblInstruccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblTitulo)
                .addGap(26, 26, 26)
                .addComponent(lblInstruccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(lblImpresora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        lblTitulo.getAccessibleContext().setAccessibleName("Impresion de Etiquetas");
        lblTitulo.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoActionPerformed
        System.out.println("action texto");
    }//GEN-LAST:event_TextoActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed

        // 
        //System.out.println("|" + Texto.getText() + "|");
        //System.out.println("|getSelectedItem()|" + cbImpresoras.getSelectedItem() + "|");
        if (Texto.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "DEBE digitar Nº de ITO Produccion Pintura");
        } else {

            if (lblImpresora.getText().equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "DEBE escojer impresora");
            } else {

                PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
                for (PrintService impresora : printServices) {

                    // lita todas las impresoras instaladas
                    //System.out.println("Impresora: " + impresora.getName());
                    if (impresora.getName().equals(lblImpresora.getText())) {
                        //if (impresora.getName().equals(cbImpresoras.getSelectedItem())) {
                        // se conecta con bd

                        Connection cnx;
                        ResultSet rs = null;
                        Statement stm;
                        Statement stmNv;
                        ResultSet rsNv = null;
                        String sql = "";
                        String qr;
                        String t;
                        int nv;
                        String razon, obra;

                        try {

                            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                            cnx = DriverManager.getConnection("jdbc:sqlserver://HP2008\\SQLEXPRESS;database=delgado1605;", "scp_is", "dsa1605*");
                            stm = cnx.createStatement();
                            stmNv = cnx.createStatement();

                            sql = "SELECT * FROM vw_itoPpD";
                            sql += " WHERE numero="
                                    + Texto.getText();
                            //sql += " AND linea=1";
                            System.out.println(this.getClass().getName() + "|163|sql|" + sql
                                    + "|");
                            rs = stm.executeQuery(sql);

                            int nCopias = 0;

                            while (rs.next()) {

                                nv = rs.getInt("nv");
                                //System.out.println(nv);

                                // busca razonSocCliente y obra
                                sql = "SELECT * FROM vw_nv WHERE nv=" + nv;
                                //System.out.println(this.getClass().getName() + "|170|sql|" + sql + "|");
                                rsNv = stmNv.executeQuery(sql);
                                razon = "";
                                obra = "";
                                if (rsNv.next()) {
                                    razon = rsNv.getString("razonSocial");
                                    obra = rsNv.getString("obra");
                                }

                                nCopias = rs.getInt("cantidad");
                                //System.out.println("copias|" + nCopias + "|");
                                for (int c = 1; c <= nCopias; c++) {

                                    qr = nv + "/";
                                    qr += rs.getString("plano") + "/";
                                    qr += rs.getString("marca") + "/";
                                    qr += rs.getString("descripcion") + "/";
                                    qr += rs.getDouble("peso");

                                    t = "^XA";

                                    t += "^FO30,30^ADN,36,20^FD" + "DELGADO S.A." + "^FS";
                                    t += "^FO360,30^ADN,36,20^FD" + Texto.getText() + "^FS";
                                    t += "^FO520,30^ADN,36,20^FD" + Funciones.fechaSql2Esp(rs.getString("fecha")) + "^FS";
                                    t += "^FO370,80^ADN,36,20^FD" + razon + "^FS";
                                    t += "^FO370,130^ADN,36,20^FD" + rs.getString("plano") + "^FS";
                                    t += "^FO370,200^AV^FD" + rs.getString("marca") + "^FS";
                                    t += "^FO370,300^ADN,36,20^FD" + rs.getString("descripcion") + "^FS";
                                    t += "^FO370,350^ADN,36,20^FD" + rs.getDouble("peso") + " Kgs" + "^FS";

                                    t += "^FO70,420^ADN,36,20^FD" + "NV " + nv + " " + obra + "^FS";

                                    t += "^FO30,70"; // posicion x y
                                    t += "^BQN,2,10";
                                    t += "^FDMM,A" + qr + "^FS";
                                    t += "^XZ";

                                    DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
                                    DocPrintJob docPrintJob = impresora.createPrintJob();
                                    Doc doc = new SimpleDoc(t.getBytes(), flavor, null);

                                    if (true) {
                                        try {
                                            docPrintJob.print(doc, null);
                                        } catch (PrintException e) {
                                            // TODO Auto-generated catch block
                                            e.printStackTrace();
                                        }
                                    }
                                    // fin impresion
                                }// fin for copias
                            }

                            if (nCopias == 0) {
                                JOptionPane.showMessageDialog(null, "ITO Produccion Pintura NO ENCONTRADA");
                            }

                        } catch (SQLException ex) {
                            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }

            }
        }

    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FrmImpresora f = new FrmImpresora();
        f.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmPrincipal().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Texto;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblImpresora;
    private javax.swing.JLabel lblInstruccion;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
